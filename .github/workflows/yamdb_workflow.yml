name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        pytest

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: ./api_yamdb/
            push: true
            tags: frizzz17/api_yamdb_final:v1

  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: 158.160.65.222
            username: frizzz17  
            key: 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

            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              sudo docker-compose stop
              sudo docker-compose rm web
              sudo systemctl stop nginx
              touch .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
